[project]
name = "glint-mask-generator"
dynamic = ["version"]
description = "Create masks for specular reflection in UAV and aerial imagery"
license = "MIT"
readme = "README.md"
repository = "https://github.com/HakaiInstitute/GlintMaskGenerator"
authors = [
    { name = "Taylor Denouden", email = "taylor.denouden@hakai.org" }
]
requires-python = ">=3.9"
dependencies = [
    "loguru>=0.7.3",
    "numpy>=2.0.2",
    "pillow>=11.2.1",
    "pyqt6>=6.9.1",
    "scipy>=1.13.1",
    "tqdm>=4.67.1",
    "typer>=0.16.0",
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pyinstaller>=6.14.1",
    "pytest>=8.4.1",
    "ruff>=0.12.1",
]

[project.scripts]
glint-mask = "glint_mask_generator.cli:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/glint_mask_generator/__init__.py"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D203",  # incorrect-blank-line-before-class
    "D213",  # multi-line-summary-second-line
    "BLE001", # Do not catch blind exception
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "SLF",
    "S101",
    "ANN",
    "D",
]

"src/gui/*" = [
    "D",
]

[tool.ruff.lint.isort]
combine-as-imports = true
